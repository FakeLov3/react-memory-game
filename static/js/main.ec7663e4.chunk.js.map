{"version":3,"sources":["components/DifficultyItem/styles.ts","components/DifficultyItem/index.tsx","pages/DifficultyChooser/styles.ts","pages/DifficultyChooser/index.tsx","styles/Global.ts","types/Theme.ts","hooks/useTypedSelector.ts","styles/Theme.ts","pages/Game/GameWinMessage/styles.ts","components/AlertModal/styles.ts","components/AlertModal/index.tsx","pages/Game/GameContext.ts","pages/Game/IconList.ts","pages/Game/useClearGameState.ts","hooks/useArrayShuffle.ts","pages/Game/GameWinMessage/index.tsx","pages/Game/useCheckGameEnd.ts","pages/Game/GameControlBar/styles.ts","pages/Game/GameControlBar/index.tsx","pages/Game/styles.ts","components/Card/styles.ts","components/Card/index.tsx","pages/Game/GameCards/styles.ts","pages/Game/GameCards/index.tsx","pages/Game/index.tsx","hooks/useTimer.ts","pages/App/index.tsx","store/reducers/ThemeReducer.ts","config/StorageKeys.ts","store/index.ts","config/IconLibrary.ts","index.tsx"],"names":["ItemSelected","css","theme","accent","Container","styled","div","primaryText","isSelected","DificultyName","NumberOfCards","DificultyItem","props","name","numOfCards","className","onClick","MenuContainer","AppName","h1","background","MenuContent","DifficultyLabel","Difficulty","DifficultyItem","DifficultyContainer","PlayButtonContainer","PlayButton","DIFFICULTIES","DifficultyChooser","history","useHistory","useState","selectedDifficulty","setSelectedDifficulty","onSelectDifficulty","difficulty","gameLocationState","push","ThemeTypes","ThemeActionTypes","fontStyle","createGlobalStyle","useTypedSelector","useSelector","dark","secondaryText","controlBar","cardBackFace","cardFrontFace","light","Button","PrimaryAction","SecondaryAction","isShowing","Dialog","TitleContainer","Title","CloseButton","Message","Footer","AlertModal","onCloseModal","title","message","children","icon","createContext","useContext","GameContext","setIconList","setIconFoundList","setIsPaused","setFirstSelectedCard","setSecondSelectedCard","onStopTimer","onShuffleArray","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","correctLengthArray","IconList","slice","concat","correctLengthSuffledArray","GameWinMessage","isShowingWinModal","setIsShowingWinModal","onClearGameState","useClearGameState","iconFoundList","onPauseTimer","useEffect","useCheckGameEnd","onPlayAgain","goBack","LeftSideContainer","BackButton","DifficultyIndicator","RightSideContainer","TimerText","span","Timer","ButtonText","PlayPauseButton","DisabledButtonStyle","RestartButton","isPaused","GameControlBar","hoursText","minutesText","secondsText","onStartTimer","window","confirm","isVisible","disabled","isShowingFrontFace","memo","CardItem","Card","numOfCardsInEachLine","GameCards","firstSelectedCard","secondSelectedCard","iconList","isCheckingCards","setIsCheckingCards","onEndCHeckingSelectedCards","firstSelectedCardIcon","secondSelectedCardIcon","setTimeout","iconFoundListClone","map","index","wasNotFound","indexOf","isTheFirstSelectedCard","isTheSecondSelectedCard","onSelectCard","key","Game","state","useLocation","startTimerOnRender","initialTime","isTimerRunning","setIsTimerRunning","milliseconds","setMilliseconds","timer","setInterval","clearInterval","useMemo","secondsValue","minutesValue","hoursValue","seconds","minutes","hours","onGetNumberText","number","newNumber","useTimer","Provider","value","App","themeType","Theme","type","themeColors","THEME_COLORS","Global","basename","process","exact","path","component","DificultyChooser","initialState","localStorage","getItem","Store","combineReducers","action","payload","SET_THEME","createStore","library","add","faChevronLeft","faPlay","faPause","faUndo","faClock","faQuestionCircle","faTimes","faPoo","faAnchor","faMoon","faAppleAlt","faBell","faBible","faBomb","faBone","faCar","faCat","faChess","faSkull","faFeatherAlt","faFire","faHeart","faMusic","Redux","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec7663e4.chunk.js","sourcesContent":["import styled, {\n  css,\n  FlattenInterpolation,\n  DefaultTheme,\n  ThemeProps,\n} from 'styled-components'\n\ntype CssType = FlattenInterpolation<ThemeProps<DefaultTheme>> | null\n\nconst ItemSelected = css`\n  background: ${({ theme }): string => theme.accent} !important;\n`\n\nexport const Container = styled.div<{ isSelected: boolean }>`\n  padding: 8px 24px;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  cursor: pointer;\n  user-select: none;\n  transition: background 0.1s ease-in-out;\n  border: 2px solid ${({ theme }): string => theme.primaryText};\n  ${({ isSelected }): CssType => (isSelected ? ItemSelected : null)}\n  &:hover {\n    background: rgba(0, 0, 0, 0.3);\n  }\n`\n\nexport const DificultyName = styled.div``\n\nexport const NumberOfCards = styled.div`\n  font-size: 3.2rem;\n  font-weight: bold;\n`\n","import React from 'react'\nimport { Container, DificultyName, NumberOfCards } from './styles'\n\nexport type DificultyItemProps = {\n  name: string\n  numOfCards: number\n  className?: string\n  isSelected?: boolean\n  onClick?: () => void\n}\n\nconst DificultyItem: React.FC<DificultyItemProps> = (props) => {\n  const { name, numOfCards, className, onClick, isSelected = false } = props\n\n  return (\n    <Container className={className} isSelected={isSelected} onClick={onClick}>\n      <DificultyName>{name}</DificultyName>\n      <NumberOfCards>{numOfCards}</NumberOfCards>\n    </Container>\n  )\n}\n\nexport default DificultyItem\n","import styled from 'styled-components'\nimport DifficultyItem from '../../components/DifficultyItem'\n\nexport const Container = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  user-select: none;\n`\n\nexport const MenuContainer = styled.div`\n  border: 2px solid ${({ theme }): string => theme.primaryText};\n  border-radius: 5px;\n  width: 50%;\n  min-width: 400px;\n  overflow: hidden;\n  box-shadow: -2px 2px 24px 1px rgba(0, 0, 0, 0.2);\n`\n\nexport const AppName = styled.h1`\n  font-size: 2.8rem;\n  text-transform: uppercase;\n  font-weight: bold;\n  text-align: center;\n  background: ${({ theme }): string => theme.primaryText};\n  color: ${({ theme }): string => theme.background};\n  padding: 8px 0;\n`\n\nexport const MenuContent = styled.div`\n  padding: 3.2rem 2.4rem;\n`\n\nexport const DifficultyLabel = styled.div`\n  font-weight: bold;\n  text-transform: uppercase;\n  font-size: 2rem;\n`\n\nexport const Difficulty = styled(DifficultyItem)`\n  width: 25%;\n  margin: 8px;\n  text-align: center;\n  flex: 1;\n`\n\nexport const DifficultyContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-top: 24px;\n`\n\nexport const PlayButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 24px;\n`\n\nexport const PlayButton = styled.div`\n  font-size: 2.4rem;\n  text-transform: uppercase;\n  font-weight: bold;\n  border: 2px solid ${({ theme }): string => theme.primaryText};\n  padding: 16px;\n  text-align: center;\n  border-radius: 5px;\n  margin-left: auto;\n  width: 50%;\n  cursor: pointer;\n  transition: background 0.2s ease-in-out;\n  &:hover {\n    background: ${({ theme }): string => theme.accent};\n  }\n`\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { GameLocationState } from '../Game/types'\nimport {\n  Container,\n  MenuContainer,\n  MenuContent,\n  AppName,\n  DifficultyContainer,\n  DifficultyLabel,\n  Difficulty,\n  PlayButton,\n  PlayButtonContainer,\n} from './styles'\n\nconst DIFFICULTIES = {\n  EASY: 12,\n  MEDIUM: 20,\n  HARD: 28,\n  VERY_HARD: 32,\n}\n\nconst DifficultyChooser: React.FC = () => {\n  const history = useHistory()\n\n  const [selectedDifficulty, setSelectedDifficulty] = useState(\n    DIFFICULTIES.MEDIUM,\n  )\n\n  const onSelectDifficulty = (difficulty: number) => (): void => {\n    setSelectedDifficulty(difficulty)\n  }\n\n  const onPlay = (): void => {\n    const gameLocationState: GameLocationState = {\n      difficulty: selectedDifficulty,\n    }\n\n    history.push('/game', gameLocationState)\n  }\n\n  return (\n    <Container>\n      <MenuContainer>\n        <AppName>React Memory Game</AppName>\n\n        <MenuContent>\n          <DifficultyLabel>Choose a Difficulty:</DifficultyLabel>\n          <div>Each difficulty changes the number of cards</div>\n\n          <DifficultyContainer>\n            <Difficulty\n              name=\"Easy\"\n              numOfCards={DIFFICULTIES.EASY}\n              onClick={onSelectDifficulty(DIFFICULTIES.EASY)}\n              isSelected={selectedDifficulty === DIFFICULTIES.EASY}\n            />\n            <Difficulty\n              name=\"Medium\"\n              numOfCards={DIFFICULTIES.MEDIUM}\n              onClick={onSelectDifficulty(DIFFICULTIES.MEDIUM)}\n              isSelected={selectedDifficulty === DIFFICULTIES.MEDIUM}\n            />\n            <Difficulty\n              name=\"Hard\"\n              numOfCards={DIFFICULTIES.HARD}\n              onClick={onSelectDifficulty(DIFFICULTIES.HARD)}\n              isSelected={selectedDifficulty === DIFFICULTIES.HARD}\n            />\n            <Difficulty\n              name=\"Very hard\"\n              numOfCards={DIFFICULTIES.VERY_HARD}\n              onClick={onSelectDifficulty(DIFFICULTIES.VERY_HARD)}\n              isSelected={selectedDifficulty === DIFFICULTIES.VERY_HARD}\n            />\n          </DifficultyContainer>\n\n          <PlayButtonContainer>\n            <PlayButton onClick={onPlay}>Play</PlayButton>\n          </PlayButtonContainer>\n        </MenuContent>\n      </MenuContainer>\n    </Container>\n  )\n}\n\nexport default DifficultyChooser\n","import { createGlobalStyle, css } from 'styled-components'\n\nconst fontStyle = css`\n  color: ${({ theme }): string => theme.primaryText};\n  line-height: 1.5;\n  font-size: 1.6rem;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n`\n\nexport default createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    outline: 0;\n  }\n\n  html {\n    font-size: 62.5%;\n  }\n\n  body {\n    font-family: 'Noto Sans', monospace;\n    background: ${({ theme }): string => theme.background};\n    ${fontStyle}\n  }\n\n  html, body, #root {\n    height: 100%;\n  }\n\n  textarea, input, button {\n    font-family: 'Noto Sans', monospace;\n    ${fontStyle}\n  }\n`\n","export enum ThemeTypes {\n  dark = 'dark',\n  light = 'light',\n}\n\nexport type ThemeType = ThemeTypes.dark | ThemeTypes.light\n\nexport type ThemePayload = {\n  type: ThemeType\n}\n\nexport enum ThemeActionTypes {\n  SET_THEME = 'SET_THEME',\n}\n\nexport type ThemeAction = {\n  type: ThemeActionTypes.SET_THEME\n  payload: ThemePayload\n}\n","import { useSelector, TypedUseSelectorHook } from 'react-redux'\nimport { ThemePayload } from '../types/Theme'\n\ninterface RootState {\n  Theme: ThemePayload\n}\n\nconst useTypedSelector: TypedUseSelectorHook<RootState> = useSelector\n\nexport default useTypedSelector\n","import { ThemeTypes } from '../types/Theme'\n\nexport default {\n  [ThemeTypes.dark]: {\n    accent: '#00bbcc',\n    primaryText: '#ffffff',\n    secondaryText: '#ccc',\n    background: '#333333',\n    controlBar: '#222222',\n    cardBackFace: '#111111',\n    cardFrontFace: '#e6e6e6',\n  },\n  [ThemeTypes.light]: {\n    accent: '#00bbcc',\n    primaryText: '#313131',\n    secondaryText: '#616161',\n    background: '#ffffff',\n    controlBar: '#222222',\n    cardBackFace: '#111111',\n    cardFrontFace: '#e6e6e6',\n  },\n}\n","import styled, { css } from 'styled-components'\n\nconst Button = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 12px 24px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: transform 0.2s ease-in-out;\n  background: ${({ theme }): string => theme.accent};\n  margin-left: 16px;\n  min-width: 25%;\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`\n\nexport const PrimaryAction = styled.div`\n  ${Button}\n  background: ${({ theme }): string => theme.accent};\n`\n\nexport const SecondaryAction = styled.div`\n  ${Button}\n  background: rgba(0,0,0,0.3);\n`\n","import styled from 'styled-components'\n\nexport const Container = styled.div<{ isShowing?: boolean }>`\n  position: fixed;\n  top: 0;\n  height: 100vh;\n  width: 100vw;\n  z-index: 999;\n  background-color: rgba(0, 0, 0, 0.9);\n  display: ${({ isShowing }): string => (isShowing ? 'flex' : 'none')};\n  justify-content: center;\n  align-items: center;\n  transition: display 0.2s ease-in-out;\n  user-select: none;\n  box-shadow: -2px 2px 16px 1px rgba(0, 0, 0, 0.5);\n`\n\nexport const Dialog = styled.div`\n  background: ${({ theme }): string => theme.background};\n  border-radius: 5px;\n  width: 33%;\n  min-width: 300px;\n`\n\nexport const TitleContainer = styled.div`\n  padding: 12px 12px 12px 24px;\n  display: flex;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.3);\n`\n\nexport const Title = styled.div`\n  font-size: 3rem;\n  font-weight: bold;\n  text-transform: uppercase;\n  flex: 1;\n`\n\nexport const CloseButton = styled.div`\n  width: 4rem;\n  height: 4rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100%;\n  cursor: pointer;\n  transition: background 0.2s ease-in-out;\n  &:hover {\n    background: ${({ theme }): string => theme.accent};\n  }\n`\n\nexport const Message = styled.div`\n  padding: 24px;\n`\n\nexport const Footer = styled.div`\n  padding: 24px;\n  display: flex;\n  justify-content: flex-end;\n`\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  Container,\n  Dialog,\n  Title,\n  TitleContainer,\n  CloseButton,\n  Message,\n  Footer,\n} from './styles'\n\ntype AlertModalProps = {\n  isShowing?: boolean\n  onCloseModal?: () => void\n  title?: string\n  message?: string\n  children?: React.ReactNode\n}\n\nconst AlertModal: React.FC<AlertModalProps> = (props) => {\n  const {\n    isShowing = false,\n    onCloseModal,\n    title = '',\n    message = '',\n    children,\n  } = props\n\n  return (\n    <Container isShowing={isShowing}>\n      <Dialog>\n        <TitleContainer>\n          <Title>{title}</Title>\n          <CloseButton onClick={onCloseModal}>\n            <FontAwesomeIcon icon=\"times\" />\n          </CloseButton>\n        </TitleContainer>\n\n        <Message>{message}</Message>\n\n        <Footer>{children}</Footer>\n      </Dialog>\n    </Container>\n  )\n}\n\nexport default AlertModal\n","import { createContext } from 'react'\nimport { GameContextValue } from './types'\n\nexport default createContext<GameContextValue>({} as GameContextValue)\n","export default [\n  'poo',\n  'anchor',\n  'moon',\n  'apple-alt',\n  'bell',\n  'bible',\n  'bomb',\n  'bone',\n  'car',\n  'cat',\n  'chess',\n  'skull',\n  'feather-alt',\n  'fire',\n  'heart',\n  'music',\n]\n","import { useContext } from 'react'\nimport { useArrayShuffle } from '../../hooks'\nimport GameContext from './GameContext'\nimport IconList from './IconList'\n\ntype ClearGameStateFunction = () => void\n\nexport default (): ClearGameStateFunction => {\n  const {\n    setIconList,\n    setIconFoundList,\n    setIsPaused,\n    setFirstSelectedCard,\n    setSecondSelectedCard,\n    difficulty,\n    onStopTimer,\n  } = useContext(GameContext)\n\n  const onShuffleArray = useArrayShuffle<string>()\n\n  const onClearGameState = (): void => {\n    setIconFoundList([])\n    setIsPaused(true)\n    setFirstSelectedCard(-1)\n    setSecondSelectedCard(-1)\n    onStopTimer()\n\n    const shuffledArray = onShuffleArray(IconList)\n    let correctLengthArray = shuffledArray.slice(0, difficulty / 2)\n    correctLengthArray = correctLengthArray.concat(correctLengthArray)\n    const correctLengthSuffledArray = onShuffleArray(correctLengthArray)\n    setIconList(correctLengthSuffledArray)\n  }\n\n  return onClearGameState\n}\n","type ShuffleFuncion<T> = (array: T[]) => T[]\n\nexport default <T>(): ShuffleFuncion<T> => {\n  const onShuffleArray = (array: T[]): T[] => {\n    let currentIndex: number = array.length\n    let temporaryValue: T\n    let randomIndex: number\n\n    // While there remain elements to shuffle\n    while (0 !== currentIndex) {\n      // Pick a remaining element\n      randomIndex = Math.floor(Math.random() * currentIndex)\n      currentIndex -= 1\n\n      // And swap it with the current element\n      temporaryValue = array[currentIndex]\n      array[currentIndex] = array[randomIndex]\n      array[randomIndex] = temporaryValue\n    }\n\n    return array\n  }\n\n  return onShuffleArray\n}\n","import React, { useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { PrimaryAction, SecondaryAction } from './styles'\nimport AlertModal from '../../../components/AlertModal'\nimport useClearGameState from '../useClearGameState'\nimport useCheckGameEnd from '../useCheckGameEnd'\nimport GameContext from '../GameContext'\n\nconst GameWinMessage: React.FC = () => {\n  const { isShowingWinModal, setIsShowingWinModal } = useContext(GameContext)\n\n  const onClearGameState = useClearGameState()\n  const history = useHistory()\n  useCheckGameEnd()\n\n  const onGoBack = (): void => {\n    history.goBack()\n  }\n\n  const onPlayAgain = (): void => {\n    setIsShowingWinModal(false)\n    onClearGameState()\n  }\n\n  return (\n    <AlertModal\n      isShowing={isShowingWinModal}\n      onCloseModal={onPlayAgain}\n      title=\"Congratulations!\"\n      message=\"You proved that your memory is powerful\"\n    >\n      <SecondaryAction onClick={onGoBack}>Go Back</SecondaryAction>\n      <PrimaryAction onClick={onPlayAgain}>Play Again</PrimaryAction>\n    </AlertModal>\n  )\n}\n\nexport default GameWinMessage\n","import { useEffect, useContext } from 'react'\nimport GameContext from './GameContext'\n\nexport default (): void => {\n  const {\n    iconFoundList,\n    difficulty,\n    setIsShowingWinModal,\n    setIsPaused,\n    onPauseTimer,\n  } = useContext(GameContext)\n\n  useEffect(() => {\n    if (iconFoundList.length === difficulty / 2) {\n      setIsShowingWinModal(true)\n      setIsPaused(true)\n      onPauseTimer()\n    }\n  }, [\n    difficulty,\n    iconFoundList.length,\n    onPauseTimer,\n    setIsPaused,\n    setIsShowingWinModal,\n  ])\n}\n","import styled, { css, FlattenSimpleInterpolation } from 'styled-components'\n\nconst ButtonHeight = 42\n\nexport const Container = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  height: 64px;\n  background: ${({ theme }): string => theme.controlBar};\n  user-select: none;\n  padding: 0 24px;\n\n  @media only screen and (max-width: 400px) {\n    padding: 0 8px;\n  }\n`\n\nexport const LeftSideContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 1;\n`\n\nexport const BackButton = styled.div`\n  margin-right: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 100%;\n  border: 1px solid ${({ theme }): string => theme.secondaryText};\n  min-height: ${ButtonHeight}px;\n  min-width: ${ButtonHeight}px;\n  font-size: 2rem;\n  cursor: pointer;\n  transition: background 0.2s ease-in-out;\n\n  &:hover {\n    background: ${({ theme }): string => theme.accent};\n  }\n`\n\nexport const DifficultyIndicator = styled.div`\n  @media only screen and (max-width: 700px) {\n    display: none;\n  }\n`\n\nexport const RightSideContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding-right: 24px;\n`\n\nexport const TimerText = styled.span``\n\nexport const Timer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0 24px;\n  ${TimerText} {\n    margin-left: 8px;\n  }\n`\n\nexport const ButtonText = styled.span`\n  @media only screen and (max-width: 500px) {\n    display: none;\n  }\n`\n\nexport const Button = styled.div`\n  display: flex;\n  align-items: center;\n  height: ${ButtonHeight}px;\n  padding: 0 24px;\n  border-radius: 5px;\n  border: 1px solid ${({ theme }): string => theme.secondaryText};\n  cursor: pointer;\n  transition: background, border 0.2s ease-in-out;\n\n  &:hover {\n    background: ${({ theme }): string => theme.accent};\n  }\n\n  ${ButtonText} {\n    margin-left: 16px;\n  }\n`\n\nexport const PlayPauseButton = styled(Button)`\n  margin-right: 8px;\n`\n\nconst DisabledButtonStyle = css`\n  background: transparent !important;\n  border: 1px solid transparent;\n  cursor: not-allowed;\n`\n\nexport const RestartButton = styled(Button)<{ isPaused?: boolean }>`\n  ${({ isPaused }): FlattenSimpleInterpolation | null =>\n    !isPaused ? DisabledButtonStyle : null}\n`\n","import React, { useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport useClearGameState from '../useClearGameState'\nimport GameContext from '../GameContext'\nimport {\n  Container,\n  LeftSideContainer,\n  BackButton,\n  DifficultyIndicator,\n  RightSideContainer,\n  Timer,\n  TimerText,\n  PlayPauseButton,\n  RestartButton,\n  ButtonText,\n} from './styles'\n\nconst GameControlBar: React.FC = () => {\n  const {\n    difficulty,\n    isPaused,\n    setIsPaused,\n    hoursText,\n    minutesText,\n    secondsText,\n    onStartTimer,\n    onPauseTimer,\n  } = useContext(GameContext)\n\n  const onClearGameState = useClearGameState()\n  const history = useHistory()\n\n  useEffect(onClearGameState, [])\n\n  const onPlayPause = (): void => {\n    setIsPaused(!isPaused)\n    if (isPaused) onStartTimer()\n    else onPauseTimer()\n  }\n\n  const onReturnToMenu = (): void => {\n    const playerWantsToLeave = window.confirm(\n      'Do you want to leave this awesome game?',\n    )\n\n    if (playerWantsToLeave) history.goBack()\n  }\n\n  const onRestart = (): void => {\n    if (isPaused) onClearGameState()\n  }\n\n  return (\n    <Container>\n      <LeftSideContainer>\n        <BackButton onClick={onReturnToMenu}>\n          <FontAwesomeIcon icon=\"chevron-left\" />\n        </BackButton>\n\n        <DifficultyIndicator>\n          {`Playing with ${difficulty} cards`}\n        </DifficultyIndicator>\n      </LeftSideContainer>\n\n      <RightSideContainer>\n        <Timer>\n          <FontAwesomeIcon icon=\"clock\" />\n          <TimerText>{`${hoursText}:${minutesText}:${secondsText}`}</TimerText>\n        </Timer>\n\n        <PlayPauseButton onClick={onPlayPause}>\n          <FontAwesomeIcon icon={isPaused ? 'play' : 'pause'} />\n        </PlayPauseButton>\n\n        <RestartButton isPaused={isPaused} onClick={onRestart}>\n          <FontAwesomeIcon icon=\"undo\" />\n          <ButtonText>Restart</ButtonText>\n        </RestartButton>\n      </RightSideContainer>\n    </Container>\n  )\n}\n\nexport default GameControlBar\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  height: 100%;\n`\n","import styled from 'styled-components'\n\ntype ContainerType = {\n  isVisible?: boolean\n  isShowingFrontFace?: boolean\n  disabled?: boolean\n}\n\nexport const Container = styled.div<ContainerType>`\n  /* width: calc(100vw / (32 / 5));\n  height: calc(100vh / 6);\n  font-size: 12rem; */\n  border-radius: 10px;\n  margin: 8px;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: background 0.1s ease-in-out;\n\n  opacity: ${({ isVisible }): string => (isVisible ? '1' : '0')};\n\n  pointer-events: ${({ isVisible, disabled }): string => {\n    if (disabled || !isVisible) return 'none'\n    return 'all'\n  }};\n\n  color: ${({ isShowingFrontFace, theme }): string =>\n    isShowingFrontFace ? theme.cardBackFace : theme.cardFrontFace};\n\n  background: ${({ isShowingFrontFace, theme }): string =>\n    isShowingFrontFace\n      ? theme.cardFrontFace + ' !important'\n      : theme.cardBackFace};\n\n  &:hover {\n    background: ${({ theme }): string => theme.accent};\n  }\n\n  /* transform-style: preserve-3d;\n  perspective: 1000px;\n  &:active {\n    transform: rotateY(180deg);\n  } */\n`\n","import React, { memo } from 'react'\nimport { Container } from './styles'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\ntype CardProps = {\n  children: React.ReactNode\n  onClick: () => void\n  isShowingFrontFace?: boolean\n  isVisible?: boolean\n  className?: string\n  disabled?: boolean\n}\n\nconst Card: React.FC<CardProps> = (props) => {\n  const {\n    children,\n    onClick,\n    isShowingFrontFace = false,\n    isVisible = true,\n    className,\n    disabled = false,\n  } = props\n\n  return (\n    <Container\n      isVisible={isVisible}\n      className={className}\n      isShowingFrontFace={isShowingFrontFace}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {isShowingFrontFace ? (\n        children\n      ) : (\n        <FontAwesomeIcon icon=\"question-circle\" />\n      )}\n    </Container>\n  )\n}\n\nexport default memo(Card)\n","import styled from 'styled-components'\nimport Card from '../../../components/Card'\n\nexport const Container = styled.div`\n  min-height: 100%;\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  padding: 0 16px 64px 16px;\n`\n\ntype CardItemType = {\n  numOfCardsInEachLine: number\n}\n\nexport const CardItem = styled(Card)<CardItemType>`\n  min-height: 100px;\n  min-width: 100px;\n  height: 20vh;\n  font-size: 8rem;\n  flex: 1 0\n    calc(\n      (100% / ${({ numOfCardsInEachLine }): number => numOfCardsInEachLine}) -\n        16px\n    );\n`\n","import React, { useContext, useEffect } from 'react'\nimport GameContext from '../GameContext'\nimport { Container, CardItem } from './styles'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\n\nconst GameCards: React.FC = () => {\n  const {\n    firstSelectedCard,\n    setFirstSelectedCard,\n    secondSelectedCard,\n    setSecondSelectedCard,\n    iconFoundList,\n    setIconFoundList,\n    iconList,\n    isPaused,\n    isCheckingCards,\n    setIsCheckingCards,\n    difficulty,\n  } = useContext(GameContext)\n\n  const onSelectCard = (index: number) => (): void => {\n    if (isCheckingCards) return\n    if (firstSelectedCard === -1) setFirstSelectedCard(index)\n    else setSecondSelectedCard(index)\n  }\n\n  const onEndCHeckingSelectedCards = (): void => {\n    setFirstSelectedCard(-1)\n    setSecondSelectedCard(-1)\n    setIsCheckingCards(false)\n  }\n\n  const onCheckIfFoundIcon = (): void => {\n    if (firstSelectedCard === -1) return\n\n    setIsCheckingCards(true)\n    const firstSelectedCardIcon = iconList[firstSelectedCard]\n    const secondSelectedCardIcon = iconList[secondSelectedCard]\n\n    if (firstSelectedCardIcon === secondSelectedCardIcon) {\n      setTimeout(() => {\n        const iconFoundListClone = [...iconFoundList]\n        iconFoundListClone.push(firstSelectedCardIcon)\n        setIconFoundList(iconFoundListClone)\n        onEndCHeckingSelectedCards()\n      }, [1000])\n    } else {\n      setTimeout(onEndCHeckingSelectedCards, [1000])\n    }\n  }\n\n  useEffect(onCheckIfFoundIcon, [secondSelectedCard])\n\n  return (\n    <Container>\n      {iconList.map(\n        (icon: string, index: number): React.ReactNode => {\n          const wasNotFound = iconFoundList.indexOf(icon) === -1\n          const isTheFirstSelectedCard = firstSelectedCard === index\n          const isTheSecondSelectedCard = secondSelectedCard === index\n          const onClick = onSelectCard(index)\n\n          const isShowingFrontFace =\n            isTheFirstSelectedCard || isTheSecondSelectedCard\n\n          return (\n            <CardItem\n              key={index}\n              onClick={onClick}\n              isVisible={wasNotFound}\n              isShowingFrontFace={isShowingFrontFace}\n              disabled={isPaused || isShowingFrontFace}\n              numOfCardsInEachLine={difficulty / 4}\n            >\n              <FontAwesomeIcon icon={icon as IconProp} />\n            </CardItem>\n          )\n        },\n      )}\n    </Container>\n  )\n}\n\nexport default GameCards\n","import React, { useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { GameLocationState } from './types'\nimport GameWinMessage from './GameWinMessage'\nimport GameControlBar from './GameControlBar'\nimport GameContext from './GameContext'\nimport { useTimer } from '../../hooks'\nimport { Container } from './styles'\nimport GameCards from './GameCards'\n\nconst Game: React.FC = () => {\n  const { state } = useLocation<GameLocationState>()\n\n  const [iconList, setIconList] = useState<string[]>([])\n  const [iconFoundList, setIconFoundList] = useState<string[]>([])\n  const [firstSelectedCard, setFirstSelectedCard] = useState(-1)\n  const [secondSelectedCard, setSecondSelectedCard] = useState(-1)\n  const [isShowingWinModal, setIsShowingWinModal] = useState(false)\n  const [isCheckingCards, setIsCheckingCards] = useState(false)\n  const [isPaused, setIsPaused] = useState(true)\n\n  const {\n    hoursText,\n    minutesText,\n    secondsText,\n    onStartTimer,\n    onStopTimer,\n    onPauseTimer,\n  } = useTimer()\n\n  return (\n    <GameContext.Provider\n      value={{\n        difficulty: state.difficulty,\n        isPaused,\n        setIsPaused,\n        iconList,\n        setIconList,\n        iconFoundList,\n        setIconFoundList,\n        firstSelectedCard,\n        setFirstSelectedCard,\n        secondSelectedCard,\n        setSecondSelectedCard,\n        isCheckingCards,\n        setIsCheckingCards,\n        isShowingWinModal,\n        setIsShowingWinModal,\n        hoursText,\n        minutesText,\n        secondsText,\n        onStartTimer,\n        onStopTimer,\n        onPauseTimer,\n      }}\n    >\n      <Container>\n        <GameCards />\n        <GameControlBar />\n        <GameWinMessage />\n      </Container>\n    </GameContext.Provider>\n  )\n}\n\nexport default Game\n","import { useState, useMemo, useEffect } from 'react'\n\ntype TimerType = {\n  milliseconds: number\n  seconds: number\n  minutes: number\n  hours: number\n  secondsText: string\n  minutesText: string\n  hoursText: string\n  onStartTimer: () => void\n  onStopTimer: () => void\n  onPauseTimer: () => void\n}\n\nexport default (startTimerOnRender = false, initialTime = 0): TimerType => {\n  const [isTimerRunning, setIsTimerRunning] = useState(startTimerOnRender)\n  const [milliseconds, setMilliseconds] = useState(initialTime)\n\n  const onStartTimer = (): void => {\n    setIsTimerRunning(true)\n  }\n\n  const onPauseTimer = (): void => {\n    setIsTimerRunning(false)\n  }\n\n  const onStopTimer = (): void => {\n    setIsTimerRunning(false)\n    setMilliseconds(0)\n  }\n\n  useEffect(() => {\n    let timer: number | null = null\n\n    if (isTimerRunning) {\n      timer = setInterval(() => {\n        setMilliseconds(milliseconds + 100)\n      }, 100)\n    }\n\n    return (): void => {\n      if (timer) clearInterval(timer)\n    }\n  }, [isTimerRunning, milliseconds])\n\n  const { seconds, minutes, hours } = useMemo<{\n    seconds: number\n    minutes: number\n    hours: number\n  }>(() => {\n    const secondsValue = milliseconds / 1000\n    const minutesValue = secondsValue / 60\n    const hoursValue = minutesValue / 60\n\n    return {\n      seconds: secondsValue - Math.floor(minutesValue) * 60,\n      minutes: minutesValue - Math.floor(hoursValue) * 60,\n      hours: hoursValue,\n    }\n  }, [milliseconds])\n\n  const onGetNumberText = (number: number): string => {\n    const newNumber = Math.floor(number)\n    return newNumber < 10 ? `0${newNumber}` : `${newNumber}`\n  }\n\n  const secondsText = useMemo(() => onGetNumberText(seconds), [seconds])\n  const minutesText = useMemo(() => onGetNumberText(minutes), [minutes])\n  const hoursText = useMemo(() => onGetNumberText(hours), [hours])\n\n  return {\n    milliseconds,\n    seconds,\n    minutes,\n    hours,\n    secondsText,\n    minutesText,\n    hoursText,\n    onStartTimer,\n    onStopTimer,\n    onPauseTimer,\n  }\n}\n","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { ThemeProvider } from 'styled-components'\nimport DificultyChooser from '../DifficultyChooser'\nimport GlobalStyles from '../../styles/Global'\nimport { useTypedSelector } from '../../hooks'\nimport THEME_COLORS from '../../styles/Theme'\nimport { ThemeTypes } from '../../types/Theme'\nimport Game from '../Game'\n\nconst App: React.FC = () => {\n  const themeType = useTypedSelector(({ Theme }) => Theme.type)\n  const themeColors = THEME_COLORS[themeType || ThemeTypes.dark]\n\n  return (\n    <ThemeProvider theme={themeColors}>\n      <GlobalStyles />\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={DificultyChooser} />\n          <Route exact path=\"/game\" component={Game} />\n        </Switch>\n      </BrowserRouter>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import { THEME_KEY } from '../../config/StorageKeys'\nimport {\n  ThemePayload,\n  ThemeTypes,\n  ThemeType,\n  ThemeAction,\n  ThemeActionTypes,\n} from '../../types/Theme'\n\nconst themeType =\n  (localStorage.getItem(THEME_KEY) as ThemeType) || ThemeTypes.dark\n\nconst initialState: ThemePayload = {\n  type: themeType,\n}\n\nexport default (\n  state: ThemePayload = initialState,\n  action: ThemeAction,\n): ThemePayload => {\n  const { type, payload } = action\n\n  switch (type) {\n    case ThemeActionTypes.SET_THEME:\n      return { ...state, ...payload }\n    default:\n      return state\n  }\n}\n","export const THEME_KEY = 'THEME_KEY'\n","import { createStore, combineReducers } from 'redux'\nimport ThemeReducer from './reducers/ThemeReducer'\n\nconst Store = combineReducers({\n  Theme: ThemeReducer,\n})\n\nexport default createStore(Store)\n","import { library } from '@fortawesome/fontawesome-svg-core'\n\nimport {\n  faChevronLeft,\n  faPlay,\n  faPause,\n  faUndo,\n  faClock,\n  faQuestionCircle,\n  faTimes,\n\n  // Icons for the game\n  faPoo,\n  faAnchor,\n  faMoon,\n  faAppleAlt,\n  faBell,\n  faBible,\n  faBomb,\n  faBone,\n  faCar,\n  faCat,\n  faChess,\n  faSkull,\n  faFeatherAlt,\n  faFire,\n  faHeart,\n  faMusic,\n} from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(\n  faChevronLeft,\n  faPlay,\n  faPause,\n  faUndo,\n  faClock,\n  faQuestionCircle,\n  faTimes,\n\n  // Icons for the game\n  faPoo,\n  faAnchor,\n  faMoon,\n  faAppleAlt,\n  faBell,\n  faBible,\n  faBomb,\n  faBone,\n  faCar,\n  faCat,\n  faChess,\n  faSkull,\n  faFeatherAlt,\n  faFire,\n  faHeart,\n  faMusic,\n)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './pages/App'\nimport store from './store'\nimport './config/IconLibrary'\n\nconst Redux: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  )\n}\n\nReactDOM.render(<Redux />, document.getElementById('root'))\n"],"sourceRoot":""}